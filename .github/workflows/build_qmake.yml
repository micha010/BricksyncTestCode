name: Build Matrix

on: [workflow_dispatch]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    env:
      BUILD_NUMBER: ${{ github.run_number }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: "Ubuntu 22.04 64bit"
          artifact: "bricksync-linux64"
          os: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Build on Linux
      if: startsWith(matrix.config.os, 'ubuntu')
      run: |
        gcc -std=gnu99 -m64 cpuconf.c cpuinfo.c -O2 -s -o cpuconf
        ./cpuconf -h -ccenv
        gcc -std=gnu99 -m64 bricksync.c bricksyncconf.c bricksyncnet.c bricksyncinit.c bricksyncinput.c bsantidebug.c bsmessage.c bsmathpuzzle.c bsorder.c bsregister.c bsapihistory.c bstranslation.c bsevalgrade.c bsoutputxml.c bsorderdir.c bspriceguide.c bsmastermode.c bscheck.c bssync.c bsapplydiff.c bsfetchorderinv.c bsresolve.c bscatedit.c bsfetchinv.c bsfetchorderlist.c bsfetchset.c bscheckreg.c bsfetchpriceguide.c tcp.c vtlex.c cpuinfo.c antidebug.c mm.c mmhash.c mmbitmap.c cc.c ccstr.c debugtrack.c tcphttp.c oauth.c bricklink.c brickowl.c brickowlinv.c colortable.c json.c bsx.c bsxpg.c journal.c exclperm.c iolog.c crypthash.c cryptsha1.c rand.c bn512.c bn1024.c rsabn.c -O2 -s -fvisibility=hidden -o bricksync -lm -lpthread -lssl -lcrypto
        mkdir -p bricksync-linux64/data
        cp bricksync bricksync-linux64
        cp bricksync.conf.txt bricksync-linux64/data
        tar -cvzf bricksync-linux64-1.7.4-${{ github.run_number}}.tar.gz bricksync-linux64
      shell: bash

    - name: Upload on Linux
      uses: actions/upload-artifact@v4
      if: startsWith(matrix.config.os, 'ubuntu')
      with:
        name: ${{ matrix.config.artifact }}
        path: "*.tar.gz"
